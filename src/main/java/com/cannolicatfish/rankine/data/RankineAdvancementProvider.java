package com.cannolicatfish.rankine.data;

import com.cannolicatfish.rankine.init.RankineItems;
import com.cannolicatfish.rankine.init.RankineLists;
import net.minecraft.advancements.Advancement;
import net.minecraft.advancements.AdvancementRewards;
import net.minecraft.advancements.FrameType;
import net.minecraft.advancements.IRequirementsStrategy;
import net.minecraft.advancements.criterion.InventoryChangeTrigger;
import net.minecraft.data.AdvancementProvider;
import net.minecraft.data.DataGenerator;
import net.minecraft.item.Items;
import net.minecraft.util.IItemProvider;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.text.TranslationTextComponent;
import net.minecraftforge.common.data.ExistingFileHelper;

import java.util.List;
import java.util.function.Consumer;
import java.util.stream.Collectors;
import java.util.stream.Stream;


public class RankineAdvancementProvider extends AdvancementProvider {

    public RankineAdvancementProvider(DataGenerator generatorIn) {
        super(generatorIn);
    }

    public String getName() {
        return "Project Rankine - Advancements";
    }

    @Override
    protected void registerAdvancements(Consumer<Advancement> consumer, ExistingFileHelper fileHelper) {
        Advancement ROOT = Advancement.Builder.builder().withDisplay(RankineItems.REFRACTORY_BRICKS.get(), new TranslationTextComponent("rankine.advancements.story.root.title"), new TranslationTextComponent("rankine.advancements.story.root.description"), new ResourceLocation("rankine:textures/gui/advancements/backgrounds/refractory.png"),  FrameType.TASK, true, false, false).withCriterion("stick", InventoryChangeTrigger.Instance.forItems(Items.STICK)).withCriterion("flint", InventoryChangeTrigger.Instance.forItems(Items.FLINT)).withCriterion("crafting_table", InventoryChangeTrigger.Instance.forItems(Items.CRAFTING_TABLE)).withRequirementsStrategy(IRequirementsStrategy.OR).register(consumer, "rankine:story/root");
        Advancement.Builder.builder().withParent(ROOT).withDisplay(Items.WRITABLE_BOOK, new TranslationTextComponent("rankine.advancements.story.support.title"), new TranslationTextComponent("rankine.advancements.story.support.description"),null,  FrameType.TASK, false, false, false).withCriterion("stick", InventoryChangeTrigger.Instance.forItems(Items.STICK)).withCriterion("flint", InventoryChangeTrigger.Instance.forItems(Items.FLINT)).withCriterion("crafting_table", InventoryChangeTrigger.Instance.forItems(Items.CRAFTING_TABLE)).withRequirementsStrategy(IRequirementsStrategy.OR).register(consumer, "rankine:story/support");
        Advancement FLINT = Advancement.Builder.builder().withParent(ROOT).withDisplay(Items.FLINT, new TranslationTextComponent("rankine.advancements.story.get_flint.title"), new TranslationTextComponent("rankine.advancements.story.get_flint.description"),null,  FrameType.TASK, true, true, false).withCriterion("flint", InventoryChangeTrigger.Instance.forItems(Items.FLINT)).register(consumer, "rankine:story/get_flint");
        Advancement ROPE = Advancement.Builder.builder().withParent(FLINT).withDisplay(RankineItems.ROPE.get(), new TranslationTextComponent("rankine.advancements.story.craft_rope.title"), new TranslationTextComponent("rankine.advancements.story.craft_rope.description"),null,  FrameType.TASK, true, true, false).withCriterion("rope", InventoryChangeTrigger.Instance.forItems(RankineItems.ROPE.get())).register(consumer, "rankine:story/craft_rope");
        Advancement DOWSING_ROD = Advancement.Builder.builder().withParent(ROPE).withDisplay(RankineItems.DOWSING_ROD.get(), new TranslationTextComponent("rankine.advancements.story.craft_dowsing_rod.title"), new TranslationTextComponent("rankine.advancements.story.craft_dowsing_rod.description"),null,  FrameType.TASK, true, false, false).withCriterion("dowsing_rod", InventoryChangeTrigger.Instance.forItems(RankineItems.DOWSING_ROD.get())).register(consumer, "rankine:story/craft_dowsing_rod");
        Advancement FLINT_AXE = Advancement.Builder.builder().withParent(ROPE).withDisplay(RankineItems.FLINT_AXE.get(), new TranslationTextComponent("rankine.advancements.story.craft_flint_axe.title"), new TranslationTextComponent("rankine.advancements.story.craft_flint_axe.description"),null,  FrameType.TASK, true, false, false).withCriterion("flint_axe", InventoryChangeTrigger.Instance.forItems(RankineItems.FLINT_AXE.get())).withCriterion("stone_axe", InventoryChangeTrigger.Instance.forItems(Items.STONE_AXE)).withRequirementsStrategy(IRequirementsStrategy.OR).register(consumer, "rankine:story/craft_flint_axe");
        Advancement CHARCOAL_PIT = Advancement.Builder.builder().withParent(FLINT_AXE).withDisplay(RankineItems.CHARCOAL_PIT.get(), new TranslationTextComponent("rankine.advancements.story.craft_charcoal_pit.title"), new TranslationTextComponent("rankine.advancements.story.craft_charcoal_pit.description"),null,  FrameType.TASK, true, true, false).withCriterion("charcoal_pit", InventoryChangeTrigger.Instance.forItems(RankineItems.CHARCOAL_PIT.get())).register(consumer, "rankine:story/craft_charcoal_pit");
        Advancement FLINT_PICKAXE = Advancement.Builder.builder().withParent(ROPE).withDisplay(RankineItems.FLINT_PICKAXE.get(), new TranslationTextComponent("rankine.advancements.story.craft_flint_pickaxe.title"), new TranslationTextComponent("rankine.advancements.story.craft_flint_pickaxe.description"),null,  FrameType.TASK, true, true, false).withCriterion("flint_pickaxe", InventoryChangeTrigger.Instance.forItems(RankineItems.FLINT_PICKAXE.get())).withCriterion("stone_pickaxe", InventoryChangeTrigger.Instance.forItems(Items.STONE_PICKAXE)).withRequirementsStrategy(IRequirementsStrategy.OR).register(consumer, "rankine:story/craft_flint_pickaxe");
        Advancement FIRE_EXTINGUISHER = Advancement.Builder.builder().withParent(FLINT_PICKAXE).withDisplay(RankineItems.FIRE_EXTINGUISHER.get(), new TranslationTextComponent("rankine.advancements.story.craft_fire_extinguisher.title"), new TranslationTextComponent("rankine.advancements.story.craft_fire_extinguisher.description"),null,  FrameType.TASK, true, false, false).withCriterion("fire_extinguisher", InventoryChangeTrigger.Instance.forItems(RankineItems.FIRE_EXTINGUISHER.get())).register(consumer, "rankine:story/craft_fire_extinguisher");
        Advancement HARDNESS_TESTER = Advancement.Builder.builder().withParent(FLINT_PICKAXE).withDisplay(RankineItems.HARDNESS_TESTER.get(), new TranslationTextComponent("rankine.advancements.story.craft_hardness_tester.title"), new TranslationTextComponent("rankine.advancements.story.craft_hardness_tester.description"),null,  FrameType.TASK, true, false, false).withCriterion("hardness_tester", InventoryChangeTrigger.Instance.forItems(RankineItems.HARDNESS_TESTER.get())).register(consumer, "rankine:story/craft_hardness_tester");
        Advancement MATERIAL_TESTING_TABLE = Advancement.Builder.builder().withParent(HARDNESS_TESTER).withDisplay(RankineItems.MATERIAL_TESTING_TABLE.get(), new TranslationTextComponent("rankine.advancements.story.craft_material_testing_table.title"), new TranslationTextComponent("rankine.advancements.story.craft_material_testing_table.description"),null,  FrameType.TASK, true, false, false).withCriterion("material_testing_table", InventoryChangeTrigger.Instance.forItems(RankineItems.MATERIAL_TESTING_TABLE.get())).register(consumer, "rankine:story/craft_material_testing_table");
        Advancement MIXING_BARREL = Advancement.Builder.builder().withParent(FLINT_PICKAXE).withDisplay(RankineItems.MIXING_BARREL.get(), new TranslationTextComponent("rankine.advancements.story.craft_mixing_barrel.title"), new TranslationTextComponent("rankine.advancements.story.craft_mixing_barrel.description"),null,  FrameType.TASK, true, true, false).withCriterion("mixing_barrel", InventoryChangeTrigger.Instance.forItems(RankineItems.MIXING_BARREL.get())).register(consumer, "rankine:story/craft_mixing_barrel");
        Advancement BLAST_FURNACE = Advancement.Builder.builder().withParent(MIXING_BARREL).withDisplay(Items.BLAST_FURNACE, new TranslationTextComponent("rankine.advancements.story.craft_blast_furnace.title"), new TranslationTextComponent("rankine.advancements.story.craft_blast_furnace.description"),null,  FrameType.TASK, true, true, false).withCriterion("blast_furnace", InventoryChangeTrigger.Instance.forItems(Items.BLAST_FURNACE)).register(consumer, "rankine:story/craft_blast_furnace");
        Advancement REFRACTORY_BRICKS = Advancement.Builder.builder().withParent(MIXING_BARREL).withDisplay(RankineItems.REFRACTORY_BRICKS.get(), new TranslationTextComponent("rankine.advancements.story.craft_refractory_bricks.title"), new TranslationTextComponent("rankine.advancements.story.craft_refractory_bricks.description"),null,  FrameType.TASK, true, true, false).withCriterion("refractory_bricks", InventoryChangeTrigger.Instance.forItems(RankineItems.REFRACTORY_BRICKS.get())).register(consumer, "rankine:story/craft_refractory_bricks");
        Advancement ALLOY_FURNACE = Advancement.Builder.builder().withParent(REFRACTORY_BRICKS).withDisplay(RankineItems.ALLOY_FURNACE.get(), new TranslationTextComponent("rankine.advancements.story.craft_alloy_furnace.title"), new TranslationTextComponent("rankine.advancements.story.craft_alloy_furnace.description"),null,  FrameType.TASK, true, true, false).withCriterion("alloy_furnace", InventoryChangeTrigger.Instance.forItems(RankineItems.ALLOY_FURNACE.get())).register(consumer, "rankine:story/craft_alloy_furnace");
        //Advancement LEVEL_2_HAMMER = Advancement.Builder.builder().withParent(ALLOY_FURNACE).withDisplay(RankineItems.ALLOY_HAMMER.get(), new TranslationTextComponent("rankine.advancements.story.craft_alloy_hammer.title"), new TranslationTextComponent("rankine.advancements.story.craft_alloy_hammer.description"),null,  FrameType.TASK, true, true, false).withCriterion("hammer", InventoryChangeTrigger.Instance.forItems(ItemPredicate.Builder.create().tag(RankineTags.Items.HAMMERS).build(), new HarvestLevelPredicate(3, Arrays.asList(RankineItems.ALLOY_HAMMER.get())))).register(consumer, "rankine:story/craft_alloy_hammer");
        Advancement BATTERIES = Advancement.Builder.builder().withParent(ALLOY_FURNACE).withDisplay(RankineItems.SILVER_ZINC_BATTERY.get(), new TranslationTextComponent("rankine.advancements.story.craft_battery.title"), new TranslationTextComponent("rankine.advancements.story.craft_battery.description"),null,  FrameType.TASK, true, true, false).withCriterion("battery1", InventoryChangeTrigger.Instance.forItems(RankineItems.SILVER_ZINC_BATTERY.get())).withCriterion("battery2", InventoryChangeTrigger.Instance.forItems(RankineItems.ZINC_BROMINE_BATTERY.get())).withCriterion("battery3", InventoryChangeTrigger.Instance.forItems(RankineItems.LEAD_ACID_BATTERY.get())).withCriterion("battery4", InventoryChangeTrigger.Instance.forItems(RankineItems.MAGNESIUM_BATTERY.get())).withCriterion("battery5", InventoryChangeTrigger.Instance.forItems(RankineItems.SODIUM_SULFUR_BATTERY.get())).withCriterion("battery6", InventoryChangeTrigger.Instance.forItems(RankineItems.VANADIUM_REDOX_BATTERY.get())).withCriterion("battery7", InventoryChangeTrigger.Instance.forItems(RankineItems.LITHIUM_ION_BATTERY.get())).withRequirementsStrategy(IRequirementsStrategy.OR).register(consumer, "rankine:story/craft_battery");
        Advancement CUPRONICKEL = Advancement.Builder.builder().withParent(ALLOY_FURNACE).withDisplay(RankineItems.CUPRONICKEL_INGOT.get(), new TranslationTextComponent("rankine.advancements.story.make_cupronickel.title"), new TranslationTextComponent("rankine.advancements.story.make_cupronickel.description"),null,  FrameType.TASK, true, false, false).withCriterion("cupronickel", InventoryChangeTrigger.Instance.forItems(RankineItems.CUPRONICKEL_INGOT.get())).register(consumer, "rankine:story/make_cupronickel");
        Advancement GROUND_TAP = Advancement.Builder.builder().withParent(CUPRONICKEL).withDisplay(RankineItems.GROUND_TAP.get(), new TranslationTextComponent("rankine.advancements.story.craft_ground_tap.title"), new TranslationTextComponent("rankine.advancements.story.craft_ground_tap.description"),null,  FrameType.TASK, true, false, false).withCriterion("ground_tap", InventoryChangeTrigger.Instance.forItems(RankineItems.GROUND_TAP.get())).register(consumer, "rankine:story/craft_ground_tap");
        Advancement SEDIMENT_FAN = Advancement.Builder.builder().withParent(CUPRONICKEL).withDisplay(RankineItems.SEDIMENT_FAN.get(), new TranslationTextComponent("rankine.advancements.story.craft_sediment_fan.title"), new TranslationTextComponent("rankine.advancements.story.craft_sediment_fan.description"),null,  FrameType.TASK, true, false, false).withCriterion("sediment_fan", InventoryChangeTrigger.Instance.forItems(RankineItems.SEDIMENT_FAN.get())).register(consumer, "rankine:story/craft_sediment_fan");
        Advancement EVAP_TOWER = Advancement.Builder.builder().withParent(CUPRONICKEL).withDisplay(RankineItems.EVAPORATION_TOWER.get(), new TranslationTextComponent("rankine.advancements.story.craft_evaporation_tower.title"), new TranslationTextComponent("rankine.advancements.story.craft_evaporation_tower.description"),null,  FrameType.TASK, true, false, false).withCriterion("evaporation_tower", InventoryChangeTrigger.Instance.forItems(RankineItems.EVAPORATION_TOWER.get())).register(consumer, "rankine:story/craft_evaporation_tower");
        Advancement CAST_IRON = Advancement.Builder.builder().withParent(ALLOY_FURNACE).withDisplay(RankineItems.CAST_IRON_INGOT.get(), new TranslationTextComponent("rankine.advancements.story.make_cast_iron.title"), new TranslationTextComponent("rankine.advancements.story.make_cast_iron.description"),null,  FrameType.TASK, true, false, false).withCriterion("cast_iron", InventoryChangeTrigger.Instance.forItems(RankineItems.CAST_IRON_INGOT.get())).register(consumer, "rankine:story/make_cast_iron");
        Advancement MAGNET = Advancement.Builder.builder().withParent(ALLOY_FURNACE).withDisplay(RankineItems.ALNICO_MAGNET.get(), new TranslationTextComponent("rankine.advancements.story.craft_magnet.title"), new TranslationTextComponent("rankine.advancements.story.craft_magnet.description"),null,  FrameType.TASK, true, true, false).withCriterion("alnico_magnet", InventoryChangeTrigger.Instance.forItems(RankineItems.ALNICO_MAGNET.get())).withCriterion("rare_earth_magnet", InventoryChangeTrigger.Instance.forItems(RankineItems.RARE_EARTH_MAGNET.get())).withCriterion("simple_magnet", InventoryChangeTrigger.Instance.forItems(RankineItems.SIMPLE_MAGNET.get())).withRequirementsStrategy(IRequirementsStrategy.OR).register(consumer, "rankine:story/craft_magnet");
        Advancement ELECTRO_MAGNET = Advancement.Builder.builder().withParent(MAGNET).withDisplay(RankineItems.ALNICO_ELECTROMAGNET.get(), new TranslationTextComponent("rankine.advancements.story.craft_electromagnet.title"), new TranslationTextComponent("rankine.advancements.story.craft_electromagnet.description"),null,  FrameType.TASK, true, false, false).withCriterion("alnico_electromagnet", InventoryChangeTrigger.Instance.forItems(RankineItems.ALNICO_ELECTROMAGNET.get())).withCriterion("rare_earth_electromagnet", InventoryChangeTrigger.Instance.forItems(RankineItems.RARE_EARTH_ELECTROMAGNET.get())).withCriterion("simple_electromagnet", InventoryChangeTrigger.Instance.forItems(RankineItems.SIMPLE_ELECTROMAGNET.get())).withRequirementsStrategy(IRequirementsStrategy.OR).register(consumer, "rankine:story/craft_electromagnet");
        Advancement INDUCTION_FURNACE = Advancement.Builder.builder().withParent(ELECTRO_MAGNET).withDisplay(RankineItems.INDUCTION_FURNACE.get(), new TranslationTextComponent("rankine.advancements.story.craft_induction_furnace.title"), new TranslationTextComponent("rankine.advancements.story.craft_induction_furnace.description"),null,  FrameType.TASK, true, true, false).withCriterion("induction_furnace", InventoryChangeTrigger.Instance.forItems(RankineItems.INDUCTION_FURNACE.get())).register(consumer, "rankine:story/craft_induction_furnace");
        Advancement THORIUM_ARROW = Advancement.Builder.builder().withParent(INDUCTION_FURNACE).withDisplay(RankineItems.THORIUM_ARROW.get(), new TranslationTextComponent("rankine.advancements.story.craft_thorium_arrow.title"), new TranslationTextComponent("rankine.advancements.story.craft_thorium_arrow.description"),null,  FrameType.TASK, true, false, false).withCriterion("thorium_arrow", InventoryChangeTrigger.Instance.forItems(RankineItems.THORIUM_ARROW.get())).register(consumer, "rankine:story/craft_thorium_arrow");
        Advancement DISTILLATION_TOWER = Advancement.Builder.builder().withParent(INDUCTION_FURNACE).withDisplay(RankineItems.DISTILLATION_TOWER.get(), new TranslationTextComponent("rankine.advancements.story.craft_distillation_tower.title"), new TranslationTextComponent("rankine.advancements.story.craft_distillation_tower.description"),null,  FrameType.TASK, true, true, false).withCriterion("distillation_tower", InventoryChangeTrigger.Instance.forItems(RankineItems.DISTILLATION_TOWER.get())).register(consumer, "rankine:story/craft_distillation_tower");
        Advancement TEMPLATE_TABLE = Advancement.Builder.builder().withParent(ALLOY_FURNACE).withDisplay(RankineItems.TEMPLATE_TABLE.get(), new TranslationTextComponent("rankine.advancements.story.craft_template_table.title"), new TranslationTextComponent("rankine.advancements.story.craft_template_table.description"),null,  FrameType.TASK, true, false, false).withCriterion("template_table", InventoryChangeTrigger.Instance.forItems(RankineItems.TEMPLATE_TABLE.get())).register(consumer, "rankine:story/craft_template_table");
        Advancement PISTON_CRUSHER = Advancement.Builder.builder().withParent(CAST_IRON).withDisplay(RankineItems.PISTON_CRUSHER.get(), new TranslationTextComponent("rankine.advancements.story.craft_piston_crusher.title"), new TranslationTextComponent("rankine.advancements.story.craft_piston_crusher.description"),null,  FrameType.TASK, true, true, false).withCriterion("piston_crusher", InventoryChangeTrigger.Instance.forItems(RankineItems.PISTON_CRUSHER.get())).register(consumer, "rankine:story/craft_piston_crusher");
        Advancement GLASS_CUTTER = Advancement.Builder.builder().withParent(CAST_IRON).withDisplay(RankineItems.GLASS_CUTTER.get(), new TranslationTextComponent("rankine.advancements.story.craft_glass_cutter.title"), new TranslationTextComponent("rankine.advancements.story.craft_glass_cutter.description"),null,  FrameType.TASK, true, false, false).withCriterion("glass_cutter", InventoryChangeTrigger.Instance.forItems(RankineItems.GLASS_CUTTER.get())).register(consumer, "rankine:story/craft_glass_cutter");
        Advancement TREE_TAP = Advancement.Builder.builder().withParent(CAST_IRON).withDisplay(RankineItems.TREE_TAP.get(), new TranslationTextComponent("rankine.advancements.story.craft_tree_tap.title"), new TranslationTextComponent("rankine.advancements.story.craft_tree_tap.description"),null,  FrameType.TASK, true, true, false).withCriterion("tree_tap", InventoryChangeTrigger.Instance.forItems(RankineItems.TREE_TAP.get())).register(consumer, "rankine:story/craft_tree_tap");
        Advancement HERBICIDE = Advancement.Builder.builder().withParent(TREE_TAP).withDisplay(RankineItems.HERBICIDE.get(), new TranslationTextComponent("rankine.advancements.story.craft_herbicide.title"), new TranslationTextComponent("rankine.advancements.story.craft_herbicide.description"),null,  FrameType.TASK, true, false, false).withCriterion("herbicide", InventoryChangeTrigger.Instance.forItems(RankineItems.HERBICIDE.get())).register(consumer, "rankine:story/craft_herbicide");
        Advancement BANDAGE = Advancement.Builder.builder().withParent(TREE_TAP).withDisplay(RankineItems.BANDAGE.get(), new TranslationTextComponent("rankine.advancements.story.craft_bandage.title"), new TranslationTextComponent("rankine.advancements.story.craft_bandage.description"),null,  FrameType.TASK, true, false, false).withCriterion("bandage", InventoryChangeTrigger.Instance.forItems(RankineItems.BANDAGE.get())).register(consumer, "rankine:story/craft_bandage");
        Advancement GAS_MASK = Advancement.Builder.builder().withParent(TREE_TAP).withDisplay(RankineItems.GAS_MASK.get(), new TranslationTextComponent("rankine.advancements.story.craft_gas_mask.title"), new TranslationTextComponent("rankine.advancements.story.craft_gas_mask.description"),null,  FrameType.TASK, true, false, false).withCriterion("gas_mask", InventoryChangeTrigger.Instance.forItems(RankineItems.GAS_MASK.get())).register(consumer, "rankine:story/craft_gas_mask");
        Advancement SHULKER_GAS_VACUUM = Advancement.Builder.builder().withParent(GAS_MASK).withDisplay(RankineItems.SHULKER_GAS_VACUUM.get(), new TranslationTextComponent("rankine.advancements.story.craft_shulker_gas_vacuum.title"), new TranslationTextComponent("rankine.advancements.story.craft_shulker_gas_vacuum.description"),null,  FrameType.TASK, true, true, false).withCriterion("shulker_gas_vacuum", InventoryChangeTrigger.Instance.forItems(RankineItems.SHULKER_GAS_VACUUM.get())).register(consumer, "rankine:story/craft_shulker_gas_vacuum");
        Advancement TRAMPOLINE = Advancement.Builder.builder().withParent(TREE_TAP).withDisplay(RankineItems.TRAMPOLINE.get(), new TranslationTextComponent("rankine.advancements.story.craft_trampoline.title"), new TranslationTextComponent("rankine.advancements.story.craft_trampoline.description"),null,  FrameType.TASK, true, true, false).withCriterion("trampoline", InventoryChangeTrigger.Instance.forItems(RankineItems.TRAMPOLINE.get())).register(consumer, "rankine:story/craft_trampoline");
        Advancement DIVING_ARMOR = Advancement.Builder.builder().withParent(TREE_TAP).withDisplay(RankineItems.DIVING_CHESTPLATE.get(), new TranslationTextComponent("rankine.advancements.story.craft_diving_armor.title"), new TranslationTextComponent("rankine.advancements.story.craft_diving_armor.description"),null,  FrameType.TASK, true, true, false).withCriterion("diving_armor", InventoryChangeTrigger.Instance.forItems(RankineItems.DIVING_HELMET.get(),RankineItems.DIVING_CHESTPLATE.get(),RankineItems.DIVING_LEGGINGS.get(),RankineItems.DIVING_BOOTS.get())).register(consumer, "rankine:story/craft_diving_armor");
        Advancement CONDUIT_ARMOR = Advancement.Builder.builder().withParent(DIVING_ARMOR).withDisplay(RankineItems.CONDUIT_DIVING_CHESTPLATE.get(), new TranslationTextComponent("rankine.advancements.story.craft_conduit_diving_armor.title"), new TranslationTextComponent("rankine.advancements.story.craft_conduit_diving_armor.description"),null,  FrameType.TASK, true, true, false).withCriterion("conduit_diving_armor", InventoryChangeTrigger.Instance.forItems(RankineItems.CONDUIT_DIVING_HELMET.get(),RankineItems.CONDUIT_DIVING_CHESTPLATE.get(),RankineItems.CONDUIT_DIVING_LEGGINGS.get(),RankineItems.CONDUIT_DIVING_BOOTS.get())).register(consumer, "rankine:story/craft_conduit_diving_armor");
        Advancement ROCK_DRILL = Advancement.Builder.builder().withParent(CAST_IRON).withDisplay(RankineItems.ROCK_DRILL.get(), new TranslationTextComponent("rankine.advancements.story.craft_rock_drill.title"), new TranslationTextComponent("rankine.advancements.story.craft_rock_drill.description"),null,  FrameType.TASK, true, false, false).withCriterion("rock_drill", InventoryChangeTrigger.Instance.forItems(RankineItems.ROCK_DRILL.get())).register(consumer, "rankine:story/craft_rock_drill");
        Advancement GYRATORY_CRUSHER = Advancement.Builder.builder().withParent(PISTON_CRUSHER).withDisplay(RankineItems.GYRATORY_CRUSHER.get(), new TranslationTextComponent("rankine.advancements.story.craft_gyratory_crusher.title"), new TranslationTextComponent("rankine.advancements.story.craft_gyratory_crusher.description"),null,  FrameType.TASK, true, true, false).withCriterion("gyratory_crusher", InventoryChangeTrigger.Instance.forItems(RankineItems.GYRATORY_CRUSHER.get())).register(consumer, "rankine:story/craft_gyratory_crusher");
        Advancement BEEHIVE_OVEN = Advancement.Builder.builder().withParent(REFRACTORY_BRICKS).withDisplay(RankineItems.BEEHIVE_OVEN_PIT.get(), new TranslationTextComponent("rankine.advancements.story.craft_beehive_oven_pit.title"), new TranslationTextComponent("rankine.advancements.story.craft_beehive_oven_pit.description"),null,  FrameType.TASK, true, true, false).withCriterion("beehive_oven_pit", InventoryChangeTrigger.Instance.forItems(RankineItems.BEEHIVE_OVEN_PIT.get())).register(consumer, "rankine:story/craft_beehive_oven_pit");
        Advancement QUICKLIME = Advancement.Builder.builder().withParent(BEEHIVE_OVEN).withDisplay(RankineItems.QUICKLIME.get(), new TranslationTextComponent("rankine.advancements.story.make_quicklime.title"), new TranslationTextComponent("rankine.advancements.story.make_quicklime.description"),null,  FrameType.TASK, true, false, false).withCriterion("quicklime", InventoryChangeTrigger.Instance.forItems(RankineItems.QUICKLIME.get())).register(consumer, "rankine:story/make_quicklime");
        Advancement MAGNESIA = Advancement.Builder.builder().withParent(BEEHIVE_OVEN).withDisplay(RankineItems.MAGNESIA.get(), new TranslationTextComponent("rankine.advancements.story.make_magnesia.title"), new TranslationTextComponent("rankine.advancements.story.make_magnesia.description"),null,  FrameType.TASK, true, false, false).withCriterion("magnesia", InventoryChangeTrigger.Instance.forItems(RankineItems.MAGNESIA.get())).register(consumer, "rankine:story/make_magnesia");
        Advancement HIGH_REFRACTORY_BRICKS = Advancement.Builder.builder().withParent(MAGNESIA).withDisplay(RankineItems.HIGH_REFRACTORY_BRICKS.get(), new TranslationTextComponent("rankine.advancements.story.craft_high_refractory_bricks.title"), new TranslationTextComponent("rankine.advancements.story.craft_high_refractory_bricks.description"),null,  FrameType.TASK, true, false, false).withCriterion("high_refractory_bricks", InventoryChangeTrigger.Instance.forItems(RankineItems.HIGH_REFRACTORY_BRICKS.get())).register(consumer, "rankine:story/craft_high_refractory_bricks");
        Advancement COKE = Advancement.Builder.builder().withParent(BEEHIVE_OVEN).withDisplay(RankineItems.COKE.get(), new TranslationTextComponent("rankine.advancements.story.make_coke.title"), new TranslationTextComponent("rankine.advancements.story.make_coke.description"),null,  FrameType.TASK, true, false, false).withCriterion("coke", InventoryChangeTrigger.Instance.forItems(RankineItems.COKE.get())).register(consumer, "rankine:story/make_coke");
        Advancement CRUCIBLE = Advancement.Builder.builder().withParent(HIGH_REFRACTORY_BRICKS).withDisplay(RankineItems.CRUCIBLE.get(), new TranslationTextComponent("rankine.advancements.story.craft_crucible.title"), new TranslationTextComponent("rankine.advancements.story.craft_crucible.description"),null,  FrameType.TASK, true, true, false).withCriterion("crucible", InventoryChangeTrigger.Instance.forItems(RankineItems.CRUCIBLE.get())).register(consumer, "rankine:story/craft_crucible");
        Advancement STEEL = Advancement.Builder.builder().withParent(CRUCIBLE).withDisplay(RankineItems.STEEL_INGOT.get(), new TranslationTextComponent("rankine.advancements.story.make_steel.title"), new TranslationTextComponent("rankine.advancements.story.make_steel.description"),null,  FrameType.TASK, true, true, false).withCriterion("steel", InventoryChangeTrigger.Instance.forItems(RankineItems.STEEL_INGOT.get())).register(consumer, "rankine:story/make_steel");
        Advancement FUSION_FURNACE = Advancement.Builder.builder().withParent(STEEL).withDisplay(RankineItems.FUSION_FURNACE.get(), new TranslationTextComponent("rankine.advancements.story.craft_fusion_furnace.title"), new TranslationTextComponent("rankine.advancements.story.craft_fusion_furnace.description"),null,  FrameType.TASK, true, true, false).withCriterion("fusion_furnace", InventoryChangeTrigger.Instance.forItems(RankineItems.FUSION_FURNACE.get())).register(consumer, "rankine:story/craft_fusion_furnace");
        Advancement ELEMENT_INDEXER = Advancement.Builder.builder().withParent(FUSION_FURNACE).withDisplay(RankineItems.ELEMENT_INDEXER.get(), new TranslationTextComponent("rankine.advancements.story.craft_element_indexer.title"), new TranslationTextComponent("rankine.advancements.story.craft_element_indexer.description"),null,  FrameType.TASK, true, true, false).withCriterion("element_indexer", InventoryChangeTrigger.Instance.forItems(RankineItems.ELEMENT_INDEXER.get())).register(consumer, "rankine:story/craft_element_indexer");
        Advancement FERTILIZER = Advancement.Builder.builder().withParent(FUSION_FURNACE).withDisplay(RankineItems.FERTILIZER.get(), new TranslationTextComponent("rankine.advancements.story.craft_fertilizer.title"), new TranslationTextComponent("rankine.advancements.story.craft_fertilizer.description"),null,  FrameType.TASK, true, false, false).withCriterion("fertilizer", InventoryChangeTrigger.Instance.forItems(RankineItems.FERTILIZER.get())).register(consumer, "rankine:story/craft_fertilizer");
        Advancement MERCURY = Advancement.Builder.builder().withParent(FUSION_FURNACE).withDisplay(RankineItems.MERCURY.get(), new TranslationTextComponent("rankine.advancements.story.make_mercury.title"), new TranslationTextComponent("rankine.advancements.story.make_mercury.description"),null,  FrameType.TASK, true, false, false).withCriterion("mercury", InventoryChangeTrigger.Instance.forItems(RankineItems.MERCURY.get())).register(consumer, "rankine:story/make_mercury");
        Advancement SADDLE_TREE = Advancement.Builder.builder().withParent(STEEL).withDisplay(RankineItems.SADDLE_TREE.get(), new TranslationTextComponent("rankine.advancements.story.craft_saddle_tree.title"), new TranslationTextComponent("rankine.advancements.story.craft_saddle_tree.description"),null,  FrameType.TASK, true, false, false).withCriterion("saddle_tree", InventoryChangeTrigger.Instance.forItems(RankineItems.SADDLE_TREE.get())).register(consumer, "rankine:story/craft_saddle_tree");
        Advancement BRIGADINE_ARMOR = Advancement.Builder.builder().withParent(STEEL).withDisplay(RankineItems.BRIGADINE_CHESTPLATE.get(), new TranslationTextComponent("rankine.advancements.story.craft_brigandine_armor.title"), new TranslationTextComponent("rankine.advancements.story.craft_brigandine_armor.description"),null,  FrameType.TASK, true, true, false).withCriterion("brigandine_armor", InventoryChangeTrigger.Instance.forItems(RankineItems.BRIGADINE_HELMET.get(),RankineItems.BRIGADINE_CHESTPLATE.get(),RankineItems.BRIGADINE_LEGGINGS.get(),RankineItems.BRIGADINE_BOOTS.get())).register(consumer, "rankine:story/craft_brigandine_armor");
        Advancement PROSPECTING_STICK = Advancement.Builder.builder().withParent(FLINT_PICKAXE).withDisplay(RankineItems.PROSPECTING_STICK.get(), new TranslationTextComponent("rankine.advancements.story.craft_prospecting_stick.title"), new TranslationTextComponent("rankine.advancements.story.craft_prospecting_stick.description"),null,  FrameType.TASK, true, true, false).withCriterion("prospecting_stick", InventoryChangeTrigger.Instance.forItems(RankineItems.PROSPECTING_STICK.get())).register(consumer, "rankine:story/craft_prospecting_stick");
        Advancement ORE_DETECTOR = Advancement.Builder.builder().withParent(PROSPECTING_STICK).withDisplay(RankineItems.ORE_DETECTOR.get(), new TranslationTextComponent("rankine.advancements.story.craft_ore_detector.title"), new TranslationTextComponent("rankine.advancements.story.craft_ore_detector.description"),null,  FrameType.TASK, true, false, false).withCriterion("ore_detector", InventoryChangeTrigger.Instance.forItems(RankineItems.ORE_DETECTOR.get())).register(consumer, "rankine:story/craft_ore_detector");
        Advancement MOVEMENT = Advancement.Builder.builder().withParent(ROPE).withDisplay(Items.LEATHER_BOOTS, new TranslationTextComponent("rankine.advancements.story.info_movement.title"), new TranslationTextComponent("rankine.advancements.story.info_movement.description"),null,  FrameType.TASK, true, false, false).withCriterion("rope", InventoryChangeTrigger.Instance.forItems(RankineItems.ROPE.get())).register(consumer, "rankine:story/info_movement");
        Advancement SNOWSHOES = Advancement.Builder.builder().withParent(MOVEMENT).withDisplay(RankineItems.SNOWSHOES.get(), new TranslationTextComponent("rankine.advancements.story.craft_snowshoes.title"), new TranslationTextComponent("rankine.advancements.story.craft_snowshoes.description"),null,  FrameType.TASK, true, false, false).withCriterion("snowshoes", InventoryChangeTrigger.Instance.forItems(RankineItems.SNOWSHOES.get())).register(consumer, "rankine:story/craft_snowshoes");
        Advancement SANDALS = Advancement.Builder.builder().withParent(MOVEMENT).withDisplay(RankineItems.SANDALS.get(), new TranslationTextComponent("rankine.advancements.story.craft_sandals.title"), new TranslationTextComponent("rankine.advancements.story.craft_sandals.description"),null,  FrameType.TASK, true, false, false).withCriterion("sandals", InventoryChangeTrigger.Instance.forItems(RankineItems.SANDALS.get())).register(consumer, "rankine:story/craft_sandals");
        Advancement ICE_SKATES = Advancement.Builder.builder().withParent(MOVEMENT).withDisplay(RankineItems.ICE_SKATES.get(), new TranslationTextComponent("rankine.advancements.story.craft_ice_skates.title"), new TranslationTextComponent("rankine.advancements.story.craft_ice_skates.description"),null,  FrameType.TASK, true, false, false).withCriterion("ice_skates", InventoryChangeTrigger.Instance.forItems(RankineItems.ICE_SKATES.get())).register(consumer, "rankine:story/craft_ice_skates");
        Advancement FINS = Advancement.Builder.builder().withParent(MOVEMENT).withDisplay(RankineItems.FINS.get(), new TranslationTextComponent("rankine.advancements.story.craft_fins.title"), new TranslationTextComponent("rankine.advancements.story.craft_fins.description"),null,  FrameType.TASK, true, false, false).withCriterion("fins", InventoryChangeTrigger.Instance.forItems(RankineItems.FINS.get())).register(consumer, "rankine:story/craft_fins");
        Advancement WOODEN_GOLD_PAN = Advancement.Builder.builder().withParent(ROOT).withDisplay(RankineItems.WOODEN_GOLD_PAN.get(), new TranslationTextComponent("rankine.advancements.story.craft_wooden_gold_pan.title"), new TranslationTextComponent("rankine.advancements.story.craft_wooden_gold_pan.description"),null,  FrameType.TASK, true, false, false).withCriterion("wooden_gold_pan", InventoryChangeTrigger.Instance.forItems(RankineItems.WOODEN_GOLD_PAN.get())).register(consumer, "rankine:story/craft_wooden_gold_pan");
        Advancement STEEL_GOLD_PAN = Advancement.Builder.builder().withParent(WOODEN_GOLD_PAN).withDisplay(RankineItems.STEEL_GOLD_PAN.get(), new TranslationTextComponent("rankine.advancements.story.craft_steel_gold_pan.title"), new TranslationTextComponent("rankine.advancements.story.craft_steel_gold_pan.description"),null,  FrameType.TASK, true, false, false).withCriterion("steel_gold_pan", InventoryChangeTrigger.Instance.forItems(RankineItems.STEEL_GOLD_PAN.get())).register(consumer, "rankine:story/craft_steel_gold_pan");
        Advancement WOODEN_HAMMER = Advancement.Builder.builder().withParent(ROOT).withDisplay(RankineItems.WOODEN_HAMMER.get(), new TranslationTextComponent("rankine.advancements.story.craft_wooden_hammer.title"), new TranslationTextComponent("rankine.advancements.story.craft_wooden_hammer.description"),null,  FrameType.TASK, true, true, false).withCriterion("wooden_hammer", InventoryChangeTrigger.Instance.forItems(RankineItems.WOODEN_HAMMER.get())).register(consumer, "rankine:story/craft_wooden_hammer");
        Advancement STONE_HAMMER = Advancement.Builder.builder().withParent(WOODEN_HAMMER).withDisplay(RankineItems.STONE_HAMMER.get(), new TranslationTextComponent("rankine.advancements.story.craft_stone_hammer.title"), new TranslationTextComponent("rankine.advancements.story.craft_stone_hammer.description"),null,  FrameType.TASK, true, false, false).withCriterion("stone_hammer", InventoryChangeTrigger.Instance.forItems(RankineItems.STONE_HAMMER.get())).register(consumer, "rankine:story/craft_stone_hammer");
        Advancement COBBLESTONE = Advancement.Builder.builder().withParent(WOODEN_HAMMER).withDisplay(Items.COBBLESTONE, new TranslationTextComponent("rankine.advancements.story.get_cobblestone.title"), new TranslationTextComponent("rankine.advancements.story.get_cobblestone.description"),null,  FrameType.TASK, true, false, false).withCriterion("cobblestone", InventoryChangeTrigger.Instance.forItems(Items.COBBLESTONE)).register(consumer, "rankine:story/get_cobblestone");
        Advancement BOG_IRON = Advancement.Builder.builder().withParent(STONE_HAMMER).withDisplay(RankineItems.BOG_IRON.get(), new TranslationTextComponent("rankine.advancements.story.get_bog_iron.title"), new TranslationTextComponent("rankine.advancements.story.get_bog_iron.description"),null,  FrameType.TASK, true, true, false).withCriterion("bog_iron", InventoryChangeTrigger.Instance.forItems(RankineItems.BOG_IRON.get())).register(consumer, "rankine:story/get_bog_iron");
        Advancement IRONSTONE = Advancement.Builder.builder().withParent(STONE_HAMMER).withDisplay(RankineItems.IRONSTONE.get(), new TranslationTextComponent("rankine.advancements.story.get_ironstone.title"), new TranslationTextComponent("rankine.advancements.story.get_ironstone.description"),null,  FrameType.TASK, true, true, false).withCriterion("ironstone", InventoryChangeTrigger.Instance.forItems(RankineItems.IRONSTONE.get())).register(consumer, "rankine:story/get_ironstone");

        //Challenges
        Advancement CHALLENGES = Advancement.Builder.builder().withDisplay(RankineItems.ENDOSITUM_INGOT.get(), new TranslationTextComponent("rankine.advancements.challenges.root.title"), new TranslationTextComponent("rankine.advancements.challenges.root.description"), new ResourceLocation("rankine:textures/gui/advancements/backgrounds/basalt.png"),  FrameType.TASK, false, false, false).withCriterion("stick", InventoryChangeTrigger.Instance.forItems(Items.STICK)).withCriterion("flint", InventoryChangeTrigger.Instance.forItems(Items.FLINT)).withCriterion("crafting_table", InventoryChangeTrigger.Instance.forItems(Items.CRAFTING_TABLE)).withRequirementsStrategy(IRequirementsStrategy.OR).register(consumer, "rankine:challenges/root");
        //Advancement.Builder.builder().withParent(CHALLENGES).withDisplay(RankineItems.BRONZE_PICKAXE.get(), new TranslationTextComponent("rankine.advancements.challenges.bronze_harvest.title"), new TranslationTextComponent("rankine.advancements.challenges.bronze_harvest.description"), null,  FrameType.CHALLENGE, true, true, false).withCriterion("pickaxe", InventoryChangeTrigger.Instance.forItems(ItemPredicate.Builder.create().item(RankineItems.BRONZE_PICKAXE.get()).build(), new HarvestLevelPredicate(3, Collections.singletonList(RankineItems.BRONZE_PICKAXE.get())))).register(consumer, "rankine:challenges/bronze_harvest");
        andList(consumer, CHALLENGES, RankineItems.TOURMALINE_GEODE.get(), "geode_collector", 300, RankineLists.GEODES.stream().map(block -> (IItemProvider) block).collect(Collectors.toList()));
        andList(consumer, CHALLENGES, RankineItems.BLACK_DACITE.get(), "stone_collector", 400, RankineLists.STONES.stream().map(block -> (IItemProvider) block).collect(Collectors.toList()));
        andList(consumer, CHALLENGES, RankineItems.HUMUS.get(), "soil_collector", 400, RankineLists.SOIL_BLOCKS.stream().map(block -> (IItemProvider) block).collect(Collectors.toList()));
        andList(consumer, CHALLENGES, RankineItems.ELEMENT.get(), "element_collector", 1000, RankineLists.ELEMENT_INGOTS.stream().map(block -> (IItemProvider) block).collect(Collectors.toList()));
        andList(consumer, CHALLENGES, RankineItems.AMALGAM_INGOT.get(), "alloy_collector", 800, RankineLists.ALLOY_INGOTS.stream().map(block -> (IItemProvider) block).collect(Collectors.toList()));
        andList(consumer, CHALLENGES, RankineItems.HYDROGEN_SULFIDE_GAS_BOTTLE.get(), "gas_collector", 700, RankineLists.GAS_BOTTLES.stream().map(block -> (IItemProvider) block).collect(Collectors.toList()));
        andList(consumer, CHALLENGES, RankineItems.TOTEM_OF_HASTENING.get(), "totem_collector", 400, Stream.of(RankineItems.TOTEM_OF_HASTENING.get(),RankineItems.TOTEM_OF_BLAZING.get(),RankineItems.TOTEM_OF_PROMISING.get(),RankineItems.TOTEM_OF_COBBLING.get(),RankineItems.TOTEM_OF_ENDURING.get(),RankineItems.TOTEM_OF_INFUSING.get(),RankineItems.TOTEM_OF_INVIGORATING.get(),RankineItems.TOTEM_OF_LEVITATING.get(),RankineItems.TOTEM_OF_REPULSING.get(),RankineItems.TOTEM_OF_SOFTENING.get(),RankineItems.TOTEM_OF_TIMESAVING.get()).map(block -> (IItemProvider) block).collect(Collectors.toList()));
        andList(consumer, CHALLENGES, RankineItems.LONSDALEITE_DIAMOND.get(), "meteoric_materials", 300, Stream.of(RankineItems.KAMACITE.get(),RankineItems.ANTITAENITE.get(),RankineItems.TAENITE.get(),RankineItems.TETRATAENITE.get(),RankineItems.LONSDALEITE_ORE.get()).map(block -> (IItemProvider) block).collect(Collectors.toList()));



    }


    private Advancement andList(Consumer<Advancement> consumer, Advancement parent, IItemProvider displayItem, String text, int XP, List<IItemProvider> itemList) {
        Advancement.Builder temp = Advancement.Builder.builder().withParent(parent).withDisplay(displayItem, new TranslationTextComponent("rankine.advancements.challenges."+text+".title"), new TranslationTextComponent("rankine.advancements.challenges."+text+".description"),null,  FrameType.CHALLENGE, true, true, false);
        for (IItemProvider item : itemList) {
            temp.withCriterion(item.asItem().getRegistryName().getPath(), InventoryChangeTrigger.Instance.forItems(item));
        }
        return temp.withRequirementsStrategy(IRequirementsStrategy.AND).withRewards(AdvancementRewards.Builder.experience(XP)).register(consumer, "rankine:challenges/"+text);
    }

}
